import { getTypeName } from "./common.mjs";
export const isDef = (v) => typeof v !== "undefined";
export const isBoolean = (v) => typeof v === "boolean";
export function isFunction(v) {
  return typeof v === "function";
}
export const isNumber = (v) => typeof v === "number";
export const isString = (v) => typeof v === "string";
export const isSymbol = (v) => typeof v === "symbol";
export function isObject(v) {
  return getTypeName(v) === "object";
}
export const isArray = (v) => Array.isArray(v);
export function isUndefined(v) {
  return typeof v === "undefined";
}
export const isNull = (v) => getTypeName(v) === "null";
export const isRegexp = (v) => getTypeName(v) === "regexp";
export const isDate = (v) => getTypeName(v) === "date";
export function isEmptyObject(v) {
  if (!isObject(v))
    return false;
  for (const _ in v)
    return false;
  return true;
}
export function isWindow(v) {
  return typeof v !== "undefined" && getTypeName(v) === "window";
}
export const isBrowser = () => typeof window !== "undefined";
